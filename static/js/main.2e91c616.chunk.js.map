{"version":3,"sources":["LoadFile.js","Icons.js","RecordPane.js","ActivityPage.js","SearchPane.js","RecordPage.js","IndexPane.js","Viewer.js","App.js","reportWebVitals.js","index.js"],"names":["LoadFile","props","_React$useState","React","useState","_React$useState2","_slicedToArray","getLunrBuilder","setLunrBuilder","_React$useState3","_React$useState4","getStatus","setStatus","IndexByTime","IndexByPid","IndexByProcess","IndexLevelByTime","IndexStreamByTime","IndexProcessByStream","IndexErrorTypeByStream","IndexActivity","builder","Builder","ref","field","IndexByTwoLevels","l0","pos","k1","k2","l1","meta","l2","push","clickIncludeLunr","e","setIncludeLunr","getIncludeLunr","BuildIndex","record","id","TimeStamp","length","dt","Date","yyyy","getUTCFullYear","toString","MM","getUTCMonth","dd","getUTCDate","hh","getUTCHours","mm","getUTCMinutes","ss","getUTCSeconds","Time","shortTS","hourlyTS","Pid","Tid","Level","Stream","ErrorType","ActivityId","text","n","Message","indexOf","ver","substr","Version","metaTimeStamp","FirstTS","Agent","m","pid","Parent","add","console","log","addLunrIndex","file","prom","records","endPos","Math","min","msg","then","Promise","resolve","setTimeout","r","lunrIdx","build","populateMetaLevel","onUpdateIndex","index","File","Records","LunrIndex","Index","Name","buildLunrIndex","le1","le2","le3","le4","le5","recs","e1","e2","e3","e4","e5","q","items","_jsx","children","_jsxs","type","className","onClick","document","getElementById","click","style","display","onChange","target","files","promResolve","data","Papa","parse","header","quoteChar","complete","results","accept","Badge","bg","SquareIcon","xmlns","width","height","fill","viewBox","d","HeartIcon","HeartFillIcon","fillRule","PlusSquare","DashSquare","FillSquare","ArrowRightShort","ArrowLeftShort","ReceiptIcon","RecordPane","getRefresh","setRefresh","clickFav","o","UpdateFavorite","RecIndex","rec","Container","fluid","pill","l","funcLevel","Function","Line","MDResult","ErrorCode","ErrorCodeMsg","Instance","Number","UpdateActivity","activityId","Favorite","ActivityPage","getStartPos","setStartPos","getModal","setModal","actid","actlist","pages","max","All","_loop","p","Modal","show","onHide","Body","SearchPane","getSearchText","setSearchText","_React$useState5","_React$useState6","size","value","onKeyDown","keyCode","idx","searchResults","search","UpdateSearchResults","message","RecordPage","getItemsPerPage","setItemsPerPage","getPage","setPage","getFilterSearch","setFilterSearch","_React$useState7","_React$useState8","getLocalSearch","setLocalSearch","_React$useState9","_React$useState10","getLocalSearchText","setLocalSearchText","_React$useState11","_React$useState12","getModalShow","setModalShow","_React$useState13","_React$useState14","getActivityModal","setActivityModal","clickItemsPerPage","num","clickShowActivity","actId","searchFound","found","find","SearchRecords","pgs","trunc","Status","modalPages","_loop2","i","scrollIntoView","block","SearchText","searchText","marginLeft","start","topHeight","window","innerHeight","IndexPane","getLevel1State","setLevel1State","updateLevel1State","item","state","selParts","Selection","split","icon0","Title","favs","Object","keys","forEach","k","c1","Index2Level","meta1","key","metaagg","Fav","d1","c2","meta2","d2","values","sort","a","b","display1","o1","icon","metaicons","o2","icon2","metaicons2","selKey","fields","updateLevel2State","Viewer","getSelection","setSelection","getRecords","setRecords","getSearchRecords","setSearchRecords","getFavorite","setFavorite","getColSize","setColSize","_React$useState15","_React$useState16","updateRecords","status","clickFavoritePane","sideItems","textAlign","startsWith","isFavoriteSelected","fav","borderBottomStyle","borderWidth","backgroundColor","name","borderRightStyle","App","getIndex","setIndex","reportWebVitals","onPerfEntry","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.2e91c616.chunk.js","sourcesContent":["import React from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport { Builder } from 'lunr';\nimport Papa from 'papaparse';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction LoadFile(props) {\n  const [getLunrBuilder, setLunrBuilder] = React.useState();\n  const [getStatus, setStatus] = React.useState();\n\n  let IndexByTime = {};\n  let IndexByPid = {};\n  let IndexByProcess = {};\n  let IndexLevelByTime = {};\n  let IndexStreamByTime = {};\n  let IndexProcessByStream = {};\n  let IndexErrorTypeByStream = {};\n  let IndexActivity = {};\n\n  if (!getLunrBuilder) {\n    let builder = new Builder();\n    builder.ref('id');\n    builder.field('ActivityId');\n    builder.field('ErrorCode');\n    builder.field('ErrorCodeMsg');\n    builder.field('ErrorType');\n    builder.field('File');\n    builder.field('Function');\n    builder.field('Instance');\n    builder.field('Level');\n    builder.field('Line');\n    builder.field('MDRESULT');\n    builder.field('Message');\n    builder.field('Pid');\n    builder.field('Stream');\n    builder.field('Tid');\n    builder.field('TimeStamp');\n    builder.field('traceparentId');\n    builder.field('Date');\n    builder.field('Time');\n\n    setLunrBuilder(builder);\n  }\n\n  const IndexByTwoLevels = (l0, pos, k1, k2) => {\n    let l1 = l0[k1];\n    if (!l1) {\n      l0[k1] = {};\n      l1 = l0[k1];\n    }\n\n    if (!l1.meta) {\n      l1.meta = {};\n    }\n\n    let l2 = l1[k2];\n    if (!l2) {\n      l1[k2] = [];\n      l2 = l1[k2];\n    }\n\n    if (!l2.meta) {\n      l2.meta = {};\n    }\n\n    l2.push(pos);\n  }\n\n  const clickIncludeLunr = (e) => {\n    props.setIncludeLunr(props.getIncludeLunr ? false : true);\n  }\n\n  const BuildIndex = (pos, record) => {\n    record.id = pos;\n\n    record.TimeStamp = record[\"[0] Time Stamp\"];\n\n    if (record.TimeStamp.length > 0) {\n      let dt = new Date(record.TimeStamp);\n  \n      let yyyy = dt.getUTCFullYear().toString();\n      let MM = (dt.getUTCMonth() + 1) < 10 ? \"0\" + (dt.getUTCMonth() + 1) : (dt.getUTCMonth() + 1).toString();\n      let dd = dt.getUTCDate() < 10 ? \"0\" + dt.getUTCDate() : dt.getUTCDate().toString();\n      record.Date = yyyy + \"-\" + MM + \"-\" + dd;\n  \n      let hh = dt.getUTCHours() < 10 ? \"0\" + dt.getUTCHours() : dt.getUTCHours().toString();\n      let mm = dt.getUTCMinutes() < 10 ? \"0\" + dt.getUTCMinutes() : dt.getUTCMinutes().toString();\n      let ss = dt.getUTCSeconds() < 10 ? \"0\" + dt.getUTCSeconds() : dt.getUTCSeconds().toString();\n      record.Time = hh + \":\" + mm + \":\" + ss;\n\n      let shortTS = MM + \"/\" + dd + \" \" + hh + \":\" + mm + \":\" + ss;\n      let hourlyTS = MM + \"/\" + dd + \" \" + hh + \":00:00\";\n\n      // *********************\n  \n      IndexByTwoLevels(IndexByTime, pos, record.Date, hh + \":00:00\");\n      IndexByTwoLevels(IndexByPid, pos, record.Pid, record.Tid);\n      IndexByTwoLevels(IndexByProcess, pos, record.Pid, \"All\");\n      IndexByTwoLevels(IndexLevelByTime, pos, \"Level \" + record.Level, hourlyTS)\n      IndexByTwoLevels(IndexStreamByTime, pos, record.Stream, hourlyTS)\n      IndexByTwoLevels(IndexProcessByStream, pos, record.Pid, record.Stream);\n      IndexByTwoLevels(IndexErrorTypeByStream, pos, record.ErrorType, record.Stream);\n      IndexByTwoLevels(IndexActivity, pos, record.ActivityId, \"All\");\n\n      let text = \"Monitoring Agent Version \";\n      let n = record.Message.indexOf(text);\n      if (n >= 0) {\n        n += text.length;\n        let ver = record.Message.substr(n, 8);\n        IndexByProcess[record.Pid].meta.Version = ver;\n      }\n\n      let metaTimeStamp = IndexByProcess[record.Pid].meta;\n      if (!metaTimeStamp.FirstTS || metaTimeStamp.FirstTS > shortTS)\n      {\n        metaTimeStamp.FirstTS = shortTS;\n      }\n      if(record.Stream === \"MonAgentCore.exe\")\n      {\n        metaTimeStamp.Agent = \"Core\";\n      }\n\n      text = \"Agent will exit when parent process \";\n      n = record.Message.indexOf(text);\n      if (n === 0)\n      {\n        n = text.length;\n        let m = record.Message.indexOf(\" exits.\");\n        let pid = record.Message.substr(n, m-n);\n        metaTimeStamp.Parent = pid;\n      }\n  \n      metaTimeStamp = IndexByPid[record.Pid][record.Tid].meta;\n      if (!metaTimeStamp.FirstTS || metaTimeStamp.FirstTS > shortTS)\n      {\n        metaTimeStamp.FirstTS = shortTS;\n      }\n\n      // *********************\n\n      if (props.getIncludeLunr) {\n        getLunrBuilder.add(record);\n      }\n    }\n    else\n    {\n      console.log(\"Bad Record:\", record);\n    }\n  }\n\n  const buildLunrIndex = (e) => {\n    // Finalize Index\n\n    let lunrIdx = getLunrBuilder.build();\n\n    populateMetaLevel(e.records, IndexByTime);\n    //populateMetaLevel(e.records, IndexByPid);\n    //populateMetaLevel(e.records, IndexByProcess);\n\n    // *******************\n\n    let msg = \"Done building index\";\n    setStatus(msg);\n    console.log(msg);\n\n    if (props.onUpdateIndex) {\n      let index = {\n        File: e.file,\n        Records: e.records,\n        LunrIndex: lunrIdx,\n        Index: [\n          {\n            Name: \"Date x Time\",\n            Index: IndexByTime,\n          },\n          {\n            Name: \"Process\",\n            Index: IndexByProcess,\n          },\n          {\n            Name: \"Process x Tid\",\n            Index: IndexByPid,\n          },\n          {\n            Name: \"Process x Stream\",\n            Index: IndexProcessByStream,\n          },\n          {\n            Name: \"Level x Time\",\n            Index: IndexLevelByTime,\n          },\n          {\n            Name: \"Stream x Time\",\n            Index: IndexStreamByTime,\n          },\n          {\n            Name: \"ErrorType x Stream\",\n            Index: IndexErrorTypeByStream,\n          },\n          {\n            Name: \"-Activty\",\n            Index: IndexActivity,\n          }\n        ]\n      }\n\n      props.onUpdateIndex(index);\n    }\n\n    return true;\n  }\n\n  const addLunrIndex = (e) => {\n    let file = e.file;\n    let prom = e.prom;\n    let records = e.records;\n    let pos = e.pos;\n\n    let endPos = Math.min(pos + 20000, records.length);\n\n    let msg = \"Indexing: \" + endPos + \" of \" + records.length;\n    setStatus(msg);\n    console.log(msg, e);\n\n    while (pos < endPos) {\n      BuildIndex(pos, records[pos]);\n      pos++;\n    }\n\n    if (pos < records.length) {\n      prom.then(() => {\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            let r = addLunrIndex({\n              file: file,\n              prom: prom,\n              records: records,\n              pos: pos,\n            });\n            resolve(r);\n          }, 10);\n        });\n      });\n    }\n    else {\n      let msg = \"Building index...\";\n      setStatus(msg);\n      console.log(msg, e);\n\n      prom.then(() => {\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            let r = buildLunrIndex({\n              file: file,\n              prom: prom,\n              records: records,\n              pos: pos,\n            });\n            resolve(r);\n          }, 10);\n        });\n      });\n    }\n\n    return { prom: prom, records: records, pos: pos };\n  }\n\n  const populateMetaLevel = (records, l1) => {\n    for (let n in l1) {\n      if (n === \"meta\") {\n        continue;\n      }\n\n      let l2 = l1[n];\n\n      let le1 = 0;\n      let le2 = 0;\n      let le3 = 0;\n      let le4 = 0;\n      let le5 = 0;\n\n      for (let m in l2) {\n        let recs = l2[m];\n\n        let e1 = 0;\n        let e2 = 0;\n        let e3 = 0;\n        let e4 = 0;\n        let e5 = 0;\n\n        for (let q in recs) {\n          if (q === \"meta\") {\n            continue;\n          }\n\n          let id = recs[q];\n\n          switch (records[id].Level) {\n            case \"1\":\n              e1++;\n              break;\n            case \"2\":\n              e2++;\n              break;\n            case \"3\":\n              e3++;\n              break;\n            case \"4\":\n              e4++;\n              break;\n            default:\n              e5++;\n              break;\n          }\n        }\n\n        if (e1 > 0) {\n          recs.meta.e1 = e1;\n        }\n        if (e2 > 0) {\n          recs.meta.e2 = e2;\n        }\n        if (e3 > 0) {\n          recs.meta.e3 = e3;\n        }\n        if (e4 > 0) {\n          recs.meta.e4 = e4;\n        }\n        if (e5 > 0) {\n          recs.meta.e5 = e5;\n        }\n\n        le1+= e1;\n        le2+= e2;\n        le3+= e3;\n        le4+= e4;\n        le5+= e5;\n      }\n\n      if (le1 > 0) {\n        l2.meta.e1 = le1;\n      }\n      if (le2 > 0) {\n        l2.meta.e2 = le2;\n      }\n      if (le3 > 0) {\n        l2.meta.e3 = le3;\n      }\n      if (le4 > 0) {\n        l2.meta.e4 = le4;\n      }\n      if (le5 > 0) {\n        l2.meta.e5 = le5;\n      }\n    }\n  }\n\n  const onChange = (e) => {\n    let file = e.target.files[0];\n    if (file) {\n      setStatus(\"Reading file...\");\n\n      let promResolve;\n\n      const prom = new Promise((resolve) => {\n        promResolve = resolve;\n      });\n\n      prom.then((data) => {\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            let r = addLunrIndex({\n              file: file,\n              prom: prom,\n              records: data,\n              pos: 0,\n            });\n            resolve(r);\n          }, 10);\n        });\n      });\n\n      Papa.parse(file, {\n        header: true,\n        quoteChar: '\"',\n        complete: (results) => {\n          setStatus(\"Start indexing...\");\n          console.log(\"Records\", results.data.length, results.data[0], results.data[results.data.length - 1]);\n          promResolve(results.data);\n        }\n      });\n    }\n  }\n\n  let items = [];\n\n  const onFileClick = (e) => {\n    let file = document.getElementById('file');\n    file.click();\n  }\n\n  if (!getStatus) {\n    items.push(\n      <div key={items.length}>\n        <button type=\"button\" className=\"btn btn-primary\" onClick={onFileClick}>Open MAEventTable.csv</button>\n        <input id=\"file\" type=\"file\" style={{ display: \"none\" }} onChange={onChange} accept=\".csv\" />\n      </div>\n    );\n    items.push(\n      <div key={items.length}>\n        Lunr Search: {props.getIncludeLunr ? <Badge bg=\"info\" onClick={clickIncludeLunr}>On</Badge> : <Badge bg=\"secondary\" onClick={clickIncludeLunr}>Off</Badge>}\n      </div>\n    )\n  }\n  else {\n    items.push(\n      <h2 key={items.length}>{getStatus}</h2>\n    );\n  }\n\n  return (\n    <div>\n      {items}\n    </div>\n  );\n}\n\nexport default LoadFile;\n","function CheckIcon() {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-check-square\" viewBox=\"0 0 16 16\">\n            <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\" />\n            <path d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.235.235 0 0 1 .02-.022z\" />\n        </svg>\n    );\n}\n\nfunction SquareIcon() {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-square\" viewBox=\"0 0 16 16\">\n            <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\" />\n        </svg>\n    );\n}\n\nfunction HeartIcon() {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-heart\" viewBox=\"0 0 16 16\">\n            <path d=\"m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\" />\n        </svg>\n    );\n}\n\nfunction HeartFillIcon() {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"red\" className=\"bi bi-heart-fill\" viewBox=\"0 0 16 16\">\n            <path fillRule=\"evenodd\" d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\" />\n        </svg>\n    );\n}\n\nfunction PlusSquare() {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-plus-square\" viewBox=\"0 0 16 16\">\n            <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\" />\n            <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\n        </svg>\n    );\n}\n\nfunction DashSquare() {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-dash-square\" viewBox=\"0 0 16 16\">\n            <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\" />\n            <path d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\" />\n        </svg>\n    );\n}\n\nfunction FillSquare() {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-square-fill\" viewBox=\"0 0 16 16\">\n            <path d=\"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2z\" />\n        </svg>\n    );\n}\n\nfunction ArrowRightShort() {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-right-short\" viewBox=\"0 0 16 16\">\n            <path fillRule=\"evenodd\" d=\"M4 8a.5.5 0 0 1 .5-.5h5.793L8.146 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L10.293 8.5H4.5A.5.5 0 0 1 4 8z\" />\n        </svg>\n    );\n}\n\nfunction ArrowLeftShort() {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-left-short\" viewBox=\"0 0 16 16\">\n            <path fillRule=\"evenodd\" d=\"M12 8a.5.5 0 0 1-.5.5H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5a.5.5 0 0 1 .5.5z\" />\n        </svg>\n    );\n}\n\nfunction ReceiptIcon() {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-receipt\" viewBox=\"0 0 16 16\">\n        <path d=\"M1.92.506a.5.5 0 0 1 .434.14L3 1.293l.646-.647a.5.5 0 0 1 .708 0L5 1.293l.646-.647a.5.5 0 0 1 .708 0L7 1.293l.646-.647a.5.5 0 0 1 .708 0L9 1.293l.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .801.13l.5 1A.5.5 0 0 1 15 2v12a.5.5 0 0 1-.053.224l-.5 1a.5.5 0 0 1-.8.13L13 14.707l-.646.647a.5.5 0 0 1-.708 0L11 14.707l-.646.647a.5.5 0 0 1-.708 0L9 14.707l-.646.647a.5.5 0 0 1-.708 0L7 14.707l-.646.647a.5.5 0 0 1-.708 0L5 14.707l-.646.647a.5.5 0 0 1-.708 0L3 14.707l-.646.647a.5.5 0 0 1-.801-.13l-.5-1A.5.5 0 0 1 1 14V2a.5.5 0 0 1 .053-.224l.5-1a.5.5 0 0 1 .367-.27zm.217 1.338L2 2.118v11.764l.137.274.51-.51a.5.5 0 0 1 .707 0l.646.647.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.509.509.137-.274V2.118l-.137-.274-.51.51a.5.5 0 0 1-.707 0L12 1.707l-.646.647a.5.5 0 0 1-.708 0L10 1.707l-.646.647a.5.5 0 0 1-.708 0L8 1.707l-.646.647a.5.5 0 0 1-.708 0L6 1.707l-.646.647a.5.5 0 0 1-.708 0L4 1.707l-.646.647a.5.5 0 0 1-.708 0l-.509-.51z\"/>\n        <path d=\"M3 4.5a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5zm8-6a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5z\"/>\n        </svg>    \n    );\n}\nexport { CheckIcon, SquareIcon, HeartIcon, HeartFillIcon, PlusSquare, DashSquare, FillSquare, ArrowRightShort, ArrowLeftShort, ReceiptIcon };\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Badge from 'react-bootstrap/Badge';\nimport { HeartIcon, HeartFillIcon, ReceiptIcon } from './Icons';\n\nfunction RecordPane(props) {\n    const [getRefresh, setRefresh] = React.useState(0);\n\n    const clickFav = (o) => {\n        if (props.UpdateFavorite) {\n            props.UpdateFavorite(props.RecIndex);\n        }\n        setRefresh(getRefresh + 1);\n    }\n\n    const IsFavorite = (n) => {\n        return props.Favorite[n];\n    }\n\n    const clickShowActivity = (activityId) => {\n        if (props.UpdateActivity) {\n            props.UpdateActivity(activityId);\n        }\n    }\n\n    let funcLevel = (l) => {\n        switch (l) {\n            case '1':\n                return \"danger\";\n            case '2':\n                return \"danger\";\n            case '3':\n                return \"secondary\";\n            case '4':\n            default:\n                return \"secondary\";\n        }\n    }\n\n    let rec = props.Index.Records[props.RecIndex];\n\n    return (\n        <Container fluid=\"xs\" className=\"recordPane mb-3\">\n            <div>\n                <small>\n                    <Badge className=\"mr-1\" pill={true} bg={funcLevel(rec.Level)}>{rec.Level}</Badge>\n                    <Badge className=\"mr-1\" bg=\"primary\">{rec.Date}</Badge>\n                    <Badge className=\"mr-1\" bg=\"primary\">{rec.Time}</Badge>\n                    <Badge className=\"mr-1\" bg=\"info\">Pid:{rec.Pid}</Badge>\n                    <Badge className=\"mr-1\" bg=\"info\">Tid:{rec.Tid}</Badge>\n                    <Badge className=\"mr-1\" bg=\"success\">Stream:{rec.Stream}</Badge>\n                    <Badge className=\"mr-1\" bg=\"success\">ErrorType:{rec.ErrorType}</Badge>\n                    <Badge className=\"mr-1\" bg=\"secondary\">{rec.Function} {rec.File}:{rec.Line}</Badge>\n                    {\n                        rec.MDResult > 0\n                            ? <Badge className=\"mr-1\" bg=\"warning\">MDResult:{rec.MDResult}</Badge>\n                            : null\n                    }\n                    {\n                        rec.ErrorCode > 0\n                            ? <Badge className=\"mr-1\" bg=\"warning\">ErrorCode:{rec.ErrorCode}</Badge>\n                            : null\n                    }\n                    {\n                        rec.ErrorCodeMsg.length > 0\n                            ? <Badge className=\"mr-1\" bg=\"warning\">ErrorCodeMsg:{rec.ErrorCodeMsg}</Badge>\n                            : null\n                    }\n                    {\n                        rec.Instance && Number(rec.Instance) > 0\n                            ? <Badge className=\"mr-1\" bg=\"secondary\">Inst:{rec.Instance}</Badge>\n                            : null\n                    }\n                    {\n                        props.UpdateActivity\n                            ? <span className=\"mr-1\" onClick={() => clickShowActivity(rec.ActivityId)}><ReceiptIcon /></span>\n                            : null\n                    }\n                    {\n                        IsFavorite(props.RecIndex)\n                            ? <span className=\"mr-1\" onClick={clickFav}><HeartFillIcon /></span>\n                            : <span className=\"mr-1\" onClick={clickFav}><HeartIcon /></span>\n                    }\n                </small>\n            </div>\n            {rec.Message}\n        </Container>);\n}\n\nexport default RecordPane;\n","import React from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport RecordPane from './RecordPane';\r\n\r\nfunction ActivityPage(props) {\r\n\r\n    const [getStartPos, setStartPos] = React.useState(0);\r\n    const [getModal, setModal] = React.useState(false);\r\n\r\n    const itemsPerPage = 10;\r\n\r\n    let actid = props.ActivityId;\r\n    let actlist = props.Index.Index[7].Index[actid];\r\n\r\n    const clickNext = () =>\r\n    {\r\n        let n = getStartPos + itemsPerPage;\r\n        if (n <= actlist.All.length)\r\n        {\r\n            setStartPos(n);\r\n        }\r\n    }\r\n\r\n    const clickPrev = () =>\r\n    {\r\n        setStartPos(Math.max(0, getStartPos - itemsPerPage));\r\n    }\r\n\r\n    const clickShowModal = () =>\r\n    {\r\n        setModal(true);\r\n    }\r\n\r\n    let pages = [];\r\n    \r\n    if (getStartPos >= 0)\r\n    {\r\n        pages.push(<div\r\n            key={pages.length}\r\n            >\r\n                ActivityID: <b>{actid}</b>\r\n            </div>\r\n            )\r\n\r\n        pages.push(\r\n            <div key={pages.length}>\r\n                <Badge className=\"btn mr-1\" bg=\"success\" onClick={clickPrev}>Prev</Badge>\r\n                <Badge className=\"btn mr-1\" pill={true}>{getStartPos + 1}</Badge>\r\n                <Badge className=\"btn mr-1\" bg=\"secondary\" onClick={clickShowModal}>/ {actlist.All.length}</Badge>\r\n                <Badge className=\"btn mr-1\" bg=\"success\" onClick={clickNext}>Next</Badge>\r\n                <hr/>\r\n            </div>\r\n        )\r\n\r\n        if (getModal)\r\n        {\r\n            let items = [];\r\n\r\n            for (let p = 0; p < actlist.All.length; p += itemsPerPage)\r\n            {\r\n                items.push(\r\n                    <Badge key={items.length} className=\"btn mr-1\" pill={true}\r\n                        onClick={() => { setStartPos(p); setModal(false); }}\r\n                        >\r\n                        {p + 1}\r\n                    </Badge>\r\n                )\r\n            }\r\n\r\n            pages.push(\r\n                <Modal key={pages.length} show={getModal} onHide={() => {setModal(false)}}>\r\n                    <Modal.Body>\r\n                        {items}\r\n                    </Modal.Body>\r\n                </Modal>\r\n            )\r\n        }\r\n\r\n        let n = 0;\r\n        for (let m = getStartPos; m < actlist.All.length; m++)\r\n        {\r\n            if (n >= itemsPerPage) break;\r\n\r\n            pages.push(<RecordPane\r\n                key={pages.length}\r\n                Index={props.Index}\r\n                RecIndex={actlist.All[m]}\r\n                Favorite={props.Favorite}\r\n                UpdateFavorite={props.UpdateFavorite}\r\n            ></RecordPane>);\r\n\r\n            n++;\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        {pages}\r\n        </div>\r\n}\r\n\r\nexport default ActivityPage;\r\n","import React from 'react';\nimport { Builder } from 'lunr';\nimport './App.css';\n\nfunction SearchPane(props) {\n  const [getStatus, setStatus] = React.useState(\"\");\n  const [getSearchText, setSearchText] = React.useState(\"\");\n  const [getRefresh, setRefresh] = React.useState(0);\n\n  const changeSearchText = (e) => {\n    setSearchText(e.target.value);\n  }\n\n  const onKeyDown = (e) => {\n    if (e.keyCode === 13) {\n      var text = getSearchText;\n      //var text = document.getElementById('searchterm').value;\n      console.log(\"Search Text:\", text);\n\n      console.log(\"Building Index...\");\n\n      let builder = new Builder();\n      builder.ref('id');\n      builder.field('ActivityId');\n      builder.field('ErrorCode');\n      builder.field('ErrorCodeMsg');\n      builder.field('ErrorType');\n      builder.field('File');\n      builder.field('Function');\n      builder.field('Instance');\n      builder.field('Level');\n      builder.field('Line');\n      builder.field('MDRESULT');\n      builder.field('Message');\n      builder.field('Pid');\n      builder.field('Stream');\n      builder.field('Tid');\n      builder.field('TimeStamp');\n      builder.field('traceparentId');\n      builder.field('Date');\n      builder.field('Time');\n\n      for (let n in props.Records)\n      {\n        if (n === \"meta\") {\n          continue;\n        }\n        let id = props.Records[n];\n        let rec = props.Index.Records[id];\n        builder.add(rec);\n      }\n\n      let idx = builder.build();\n\n      // ***************\n\n      let searchResults = [];\n\n      try {\n        let results = idx.search(text);\n        setStatus('\"' + text + '\" Found: ' + results.length);\n        \n        for (let n in results)\n        {\n          searchResults.push(Number(results[n].ref));\n        }\n\n        props.UpdateSearchResults(text, searchResults);\n      }\n      catch(e) {\n        console.log(\"Search Failed:\", e);\n        setStatus(\"Failed: \" + e.message);\n        props.UpdateSearchResults(\"\", []);\n      }\n\n      setSearchText(\"\");\n    }\n  }\n\n  if (props.Records.length !== getRefresh)\n  {\n    setRefresh(props.Records.length);\n    setStatus(\"\");\n    setSearchText(\"\");\n  }\n\n  var items = [];\n\n  items.push(\n    <span key={items.length}>\n      Search:\n      <span className=\"mr-1 ml-1\">\n        <input id='searchterm' type=\"text\" size=\"16\" value={getSearchText} onChange={changeSearchText} onKeyDown={onKeyDown}></input>\n      </span>\n      <span>{getStatus}</span>\n    </span>\n  );\n\n  return (\n    <span>\n      {items}\n    </span>\n  );\n}\n\nexport default SearchPane;\n","import React from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport Modal from 'react-bootstrap/Modal';\nimport ActivityPage from './ActivityPage';\nimport RecordPane from './RecordPane';\nimport SearchPane from './SearchPane';\n\nfunction RecordPage(props) {\n    const [getItemsPerPage, setItemsPerPage] = React.useState(50);\n    const [getPage, setPage] = React.useState(1);\n    const [getFilterSearch, setFilterSearch] = React.useState(false);\n    const [getLocalSearch, setLocalSearch] = React.useState([]);\n    const [getLocalSearchText, setLocalSearchText] = React.useState(\"\");\n    const [getModalShow, setModalShow] = React.useState(false);\n    const [getActivityModal, setActivityModal] = React.useState(null);\n\n    const clickItemsPerPage = (e, num) => {\n        setItemsPerPage(num);\n        setPage(1);\n    }\n\n    const clickPage = (e, id) => {\n        let element = document.getElementById(\"top\");\n        element.scrollIntoView({block: \"start\"});\n        setPage(id);\n        setModalShow(false);\n    }\n\n    const clickFilterSearch = (e) => {\n        setFilterSearch(getFilterSearch ? false : true);\n    }\n\n    const updateSearchResults = (searchText, results) => {\n        setLocalSearchText(searchText);\n        setLocalSearch(results);\n        setFilterSearch(true);\n    }\n\n    const clickTop = () => {\n        let element = document.getElementById(\"top\");\n        element.scrollIntoView({block: \"start\"});\n    }\n\n    const clickNext = () => {\n        setPage(getPage + 1);\n        let element = document.getElementById(\"top\");\n        element.scrollIntoView({block: \"start\"});\n    }\n\n    const clickPrev = () => {\n        setPage(Math.max(getPage - 1, 1));\n        let element = document.getElementById(\"top\");\n        element.scrollIntoView({block: \"start\"});\n    }\n\n    const clickShowActivity = (actId) => {\n        setActivityModal(actId);\n    }\n\n    let records = [];\n    let searchFound = 0;\n    for (let n in props.Records) {\n        if (n === \"meta\") {\n            continue;\n        }\n\n        let id = props.Records[n];\n\n        let found = false;\n        if (getLocalSearch.length > 0)\n        {\n            found = getLocalSearch.find((rec) => rec === id);\n        }\n        else\n        {\n            found = props.SearchRecords.find((rec) => rec === id);\n        }\n\n        if (found) {\n            searchFound++;\n        }\n\n        if (getFilterSearch) {\n            if (found) {\n                records.push(id);\n            }\n        }\n        else {\n            records.push(id);\n        }\n    }\n\n    let pgs = 1 + Math.trunc(records.length / getItemsPerPage);\n\n    if (getPage > pgs) {\n        setPage(1);\n    }\n\n    let pages = [];\n\n    if (props.Status) {\n        pages.push(<div key={pages.length}>\n            {props.Status}\n        </div>)\n    }\n\n    let modalPages = [];\n    for (let i = 1; i <= pgs; i++) {\n        modalPages.push(\n            <Badge key={modalPages.length} \n                className=\"btn mr-1\"\n                pill={true} \n                onClick={ (e) => { clickPage(e,i) }}>\n                {i}\n            </Badge>\n        );\n    }\n\n    pages.push(\n        <Modal key={pages.length} show={getModalShow} onHide={() => {setModalShow(false)}}>\n            <Modal.Body>\n                {modalPages}\n            </Modal.Body>\n        </Modal>\n    )\n\n    if (getActivityModal)\n    {\n        pages.push(\n            <Modal key={pages.length} show={true} onHide={() => {setActivityModal(null)}}>\n                <Modal.Body>\n                    <ActivityPage\n                        Index={props.Index}\n                        ActivityId={getActivityModal}\n                        Favorite={props.Favorite}\n                        UpdateFavorite={props.UpdateFavorite}\n                        >\n                    </ActivityPage>\n                </Modal.Body>\n            </Modal>\n        )\n    }\n\n    pages.push(\n        <div key={pages.length}>\n            <Badge className=\"btn mr-1\" \n                bg={getFilterSearch?\"info\":\"secondary\"} \n                onClick={clickFilterSearch}>\n                Search {searchFound}: {getFilterSearch ? \"On\" : \"Off\" }\n                </Badge>\n            <SearchPane\n                Index={props.Index}\n                Records={props.Records}\n                SearchText={getLocalSearchText}\n                UpdateSearchResults={updateSearchResults}\n            />\n        </div>\n    );\n\n    pages.push(\n        <div key={pages.length}>\n            <Badge className=\"btn mr-1\" bg=\"success\" onClick={clickPrev}>Prev</Badge>\n            <Badge className=\"btn mr-1\" pill={true} onClick={clickTop}>{getPage}</Badge>\n            <Badge className=\"btn mr-1\" bg=\"secondary\" onClick={()=>{setModalShow(true)}}>/ {pgs}</Badge>\n            <Badge className=\"btn mr-1\" bg=\"success\" onClick={clickNext}>Next</Badge>\n            <span style={{ marginLeft: \"20px\" }}></span>\n            <Badge className=\"btn mr-1\" bg={getItemsPerPage === 10 ? \"success\" : \"secondary\"} onClick={(e) => clickItemsPerPage(e, 10)}>10/pg</Badge>\n            <Badge className=\"btn mr-1\" bg={getItemsPerPage === 50 ? \"success\" : \"secondary\"} onClick={(e) => clickItemsPerPage(e, 50)}>50/pg</Badge>\n            <Badge className=\"btn mr-1\" bg={getItemsPerPage === 100 ? \"success\" : \"secondary\"} onClick={(e) => clickItemsPerPage(e, 100)}>100/pg</Badge>\n        </div>\n    );\n\n    pages.push(<hr key={pages.length}></hr>);\n\n    let items = [];\n\n    items.push(<div key={items.length} id=\"top\"></div>);\n\n    let start = (getPage - 1) * getItemsPerPage;\n    for (let i = 0; i < getItemsPerPage; i++) {\n        let pos = start + i;\n        if (pos < records.length) {\n            items.push(<RecordPane\n                key={items.length}\n                Index={props.Index}\n                RecIndex={records[pos]}\n                Favorite={props.Favorite}\n                UpdateFavorite={props.UpdateFavorite}\n                UpdateActivity={clickShowActivity}\n            ></RecordPane>);\n        }\n    }\n\n    let topHeight = 100;\n\n    return <div>\n        <div className=\"mb-4\" style={{ height: topHeight+\"px\" }}>\n            {pages}\n        </div>\n        <div className=\"scrollable\" style={{ height: (window.innerHeight - topHeight - 60)+\"px\" }}>\n            {items}\n        </div>\n    </div>;\n}\n\nexport default RecordPage;\n","import React from 'react';\nimport { Badge } from 'react-bootstrap';\nimport { SquareIcon, PlusSquare, DashSquare, FillSquare, HeartFillIcon } from './Icons';\n\nfunction IndexPane(props) {\n    const [getRefresh, setRefresh] = React.useState(0);\n    const [getLevel1State, setLevel1State] = React.useState({});\n\n    const updateLevel1State = (e, item) => {\n        let state = getLevel1State;\n        state[item] = state[item] ? false : true;\n        setLevel1State(state);\n        setRefresh(getRefresh + 1);\n    }\n\n    const updateLevel2State = (e, selKey, recs) => {\n        var fields = selKey.split(\"|**|\");\n        props.onChange(selKey, recs, \"Show: \" + fields[0] + \", \" + fields[1] + \", \" + fields[2]);\n        setRefresh(getRefresh + 1);\n    }\n\n    let selParts = props.Selection.split('|**|');\n\n    let items = [];\n\n    let icon0 = getLevel1State[\"***\"] ? DashSquare() : PlusSquare();\n    items.push(\n        <div key={items.length} onClick={(e) => updateLevel1State(e, \"***\")}>\n            {icon0} {selParts[0] === props.Title ? (<b>{props.Title}</b>) : props.Title}\n        </div>\n    )\n    if (getLevel1State[\"***\"]) {\n\n        let favs = [];\n        Object.keys(props.Favorite).forEach((k) => {\n            favs.push(Number(k));\n        });\n\n        let c1 = {};\n        Object.keys(props.Index2Level).forEach((k1) => {\n            if (k1 !== \"meta\") {\n                let l1 = props.Index2Level[k1];\n                let meta1 = l1.meta;\n\n                c1[k1] = {\n                    key: k1,\n                    children: [],\n                    metaagg: {\n                        Fav: 0,\n                    },\n                    meta: meta1,\n                }\n\n                let d1 = c1[k1];\n\n                let c2 = {};\n                Object.keys(l1).forEach((k2) => {\n                    if (k2 !== \"meta\") {\n                        let l2 = l1[k2];\n                        let meta2 = l2.meta;\n\n                        c2[k2] = {\n                            key: k2,\n                            children: l2,\n                            metaagg: {\n                                Fav: 0,\n                            },\n                            meta: meta2,\n                        }\n\n                        let d2 = c2[k2];\n\n                        for (let n in l2) {\n                            let id = l2[n];\n\n                            if (favs.indexOf(id) !== -1) {\n                                d1.metaagg.Fav++;\n                                d2.metaagg.Fav++;\n                            }\n                        }\n                    }\n                });\n\n                // Level 2 sort order\n                d1.children = Object.values(c2)\n                    .sort((a, b) => {\n                        if (a.meta.FirstTS) {\n                            if (a.meta.FirstTS > b.meta.FirstTS) return 1;\n                            if (a.meta.FirstTS < b.meta.FirstTS) return -1;\n                        }\n\n                        if (a.key > b.key) return 1;\n                        if (a.key < b.key) return -1;\n                        return 0;\n                    });\n            }\n        });\n\n        // Level 1 sort order\n        let display1 = Object.values(c1)\n            .sort((a, b) => {\n                if (a.meta.FirstTS) {\n                    if (a.meta.FirstTS > b.meta.FirstTS) return 1;\n                    if (a.meta.FirstTS < b.meta.FirstTS) return -1;\n                }\n\n                if (a.key > b.key) return 1;\n                if (a.key < b.key) return -1;\n                return 0;\n            });\n\n        for (let n in display1) {\n            let o1 = display1[n];\n            let k1 = o1.key;\n            let state = getLevel1State;\n            let icon = state[k1] ? DashSquare() : PlusSquare();\n\n            let metaicons = [];\n            let meta = o1.meta;\n            if (meta) {\n                Object.keys(meta).forEach((m) => {\n                    metaicons.push(\n                        <Badge key={metaicons.length} pill={true} bg=\"info\" className=\"mr-1\">\n                            {m}:{meta[m]}\n                        </Badge>\n                    );\n                });\n            }\n\n            Object.keys(o1.metaagg).forEach((m) => {\n                let n = o1.metaagg[m];\n                if (n > 0) {\n                    if (m === \"Fav\") {\n                        metaicons.push(\n                            <span key={metaicons.length}>\n                                <HeartFillIcon />\n                                {n}\n                            </span>\n                        );\n                    } else {\n                        metaicons.push(\n                            <Badge key={metaicons.length} pill={true} bg=\"info\" className=\"mr-1\">\n                                {m}:{n}\n                            </Badge>\n                        );\n                    }\n                }\n            });\n\n            items.push(\n                <div key={items.length} className=\"ml-indent1\" onClick={(e) => updateLevel1State(e, k1)}>\n                    {icon} {selParts[0] === props.Title && selParts[1] === k1 ? (<b>{k1}</b>) : k1} <small>{metaicons}</small>\n                </div>\n            );\n\n            if (state[k1]) {\n                for (let m in o1.children) {\n                    let o2 = o1.children[m];\n                    let k2 = o2.key;\n                    let key = props.Title + \"|**|\" + k1 + \"|**|\" + k2;\n                    let icon2 = props.Selection === key ? FillSquare() : SquareIcon();\n                    let recs = o2.children;\n\n                    let metaicons2 = [];\n                    let meta2 = o2.meta;\n                    if (meta2) {\n                        Object.keys(meta2).forEach((m) => {\n                            metaicons2.push(\n                                <Badge key={metaicons2.length} pill={true} bg=\"info\" className=\"mr-1\">\n                                    {m}:{meta2[m]}\n                                </Badge>\n                            );\n                        });\n                    }\n\n                    Object.keys(o2.metaagg).forEach((m) => {\n                        let n = o2.metaagg[m];\n                        if (n > 0) {\n                            if (m === \"Fav\") {\n                                metaicons2.push(\n                                    <span key={metaicons2.length}>\n                                        <HeartFillIcon />\n                                        {n}\n                                    </span>\n                                );\n                            } else {\n                                metaicons2.push(\n                                    <Badge key={metaicons2.length} pill={true} bg=\"info\" className=\"mr-1\">\n                                        {m}:{n}\n                                    </Badge>\n                                );\n                            }\n                        }\n                    });\n\n                    items.push(\n                        <div key={items.length} className=\"ml-indent2\"\n                            onClick={(e) => updateLevel2State(e, key, recs)}>\n                            {icon2} {props.Selection === key ? <b>{k2}</b> : k2} {metaicons2}\n                        </div>\n                    );\n                }\n            }\n        }\n    }\n\n    return (\n        <div>\n            {items}\n        </div>\n    );\n}\n\nexport default IndexPane;","import React from 'react';\nimport RecordPage from './RecordPage';\nimport IndexPane from './IndexPane';\nimport { HeartFillIcon, SquareIcon, FillSquare, ArrowLeftShort, ArrowRightShort } from './Icons';\nimport { Badge } from 'react-bootstrap';\n\nimport './App.css';\n\nfunction Viewer(props) {\n    const [getStatus, setStatus] = React.useState();\n    const [getSelection, setSelection] = React.useState(\"|**|\");\n    const [getRecords, setRecords] = React.useState([]);\n    const [getSearchRecords, setSearchRecords] = React.useState([]);\n    const [getSearchText, setSearchText] = React.useState(\"\");\n    const [getFavorite, setFavorite] = React.useState({});\n    const [getColSize, setColSize] = React.useState(2);\n    const [getRefresh, setRefresh] = React.useState(0);\n\n    const onKeyDown = (e) => {\n        if (e.keyCode === 13) {\n            let records = [];\n\n            let text = getSearchText;\n            if (text.length > 0) {\n                if (text.indexOf(':') === -1) {\n                    text = \"Message:\" + text;\n                }\n\n                let results = [];\n\n                try {\n                    results = props.Index.LunrIndex.search(text);\n                    setStatus(\"[\" + text + \"] found \" + results.length + \" items.\");\n                }\n                catch (e) {\n                    console.log(\"Search failed\", e);\n                    setStatus(\"[\" + text + \"] FAILED: \" + e.message);\n                }\n\n                for (let n in results) {\n                    records.push(results[n].ref);\n                }\n            }\n\n            setRecords(records);\n            setSearchRecords(records);\n            setSelection(\"Search|**|None\");\n        }\n    }\n\n    const onChange = (e) => {\n        setSearchText(e.target.value);\n    }\n\n    const clickSearchPane = (e) => {\n        let text = getSearchText;\n        if (text.indexOf(':') === -1) {\n            text = \"Message:\" + text;\n        }\n\n        setRecords(getSearchRecords);\n        setSelection(\"Search|**|None\");\n        setStatus(\"[\" + text + \"] found \" + getSearchRecords.length + \" items.\");\n        setRefresh(getRefresh + 1);\n    }\n\n    const updateRecords = (selKey, e, status) => {\n        setSelection(selKey);\n        setRecords(e);\n        setStatus(status);\n        setRefresh(getRefresh + 1);\n    }\n\n    const updateFavorite = (e) => {\n        var fav = getFavorite;\n        if (fav[e]) {\n            delete fav[e];\n        }\n        else {\n            fav[e] = true;\n        }\n        setFavorite(fav);\n        setRefresh(getRefresh + 1);\n    }\n\n    const clickFavoritePane = (e) => {\n        var records = [];\n        var keys = Object.keys(getFavorite);\n        for (var i in keys) {\n            records.push(keys[i]);\n        }\n        setRecords(records);\n        setSelection(\"Favorite|**|None\");\n        setStatus(\"Show Favorites\");\n        setRefresh(getRefresh + 1);\n    }\n\n    // *******************\n\n    let sideItems = [];\n\n    sideItems.push(\n        <div key={sideItems.length} style={{ textAlign: 'right'}}>\n            <span className=\"mr-1\" onClick={()=>setColSize(Math.max(getColSize-1, 2))}><ArrowLeftShort/></span>\n            <span className=\"mr-1\" onClick={()=>setColSize(Math.min(getColSize+1, 5))}><ArrowRightShort/></span>\n        </div>\n    );\n\n    if (props.getIncludeLunr) {\n        sideItems.push(\n            <div onClick={clickSearchPane} key={sideItems.length}>\n                <div className=\"mr-1\" onClick={clickFavoritePane}>\n                    <span className=\"mr-1\">{getSelection.startsWith(\"Search|**|\") ? (<b>Search</b>) : (<span>Search</span>)}</span>\n                    <Badge pill={true} bg=\"info\">Found: {getSearchRecords.length}</Badge>\n                </div>\n                <div className=\"ml-indent1\">\n                    <input id='searchterm' type=\"text\" size=\"16\" onChange={onChange} onKeyDown={onKeyDown}></input>\n                </div>\n            </div>\n        );\n    }\n\n    let isFavoriteSelected = getSelection.startsWith(\"Favorite|**|\");\n    sideItems.push(\n        <div key={sideItems.length}>\n            <span className=\"mr-1\">{isFavoriteSelected ? <FillSquare /> : <SquareIcon />} </span>\n            <span className=\"mr-1\" onClick={clickFavoritePane}>{isFavoriteSelected ? (<b>Favorite</b>) : (<span>Favorite</span>)}</span>\n            <Badge pill={true} bg=\"secondary\"><HeartFillIcon /> {Object.keys(getFavorite).length}</Badge>\n        </div>\n    );\n\n    for (let n in props.Index.Index) {\n        let idx = props.Index.Index[n];\n\n        if (idx.Name.startsWith(\"-\"))\n        {\n            continue;\n        }\n\n        sideItems.push(\n            <IndexPane key={sideItems.length}\n                Records={props.Records}\n                Index2Level={idx.Index}\n                Selection={getSelection}\n                Favorite={getFavorite}\n                onChange={updateRecords}\n                Title={idx.Name}\n            />\n        );\n    }\n\n    // *******************\n\n    let items = [];\n\n    items.push(\n        <RecordPage\n            key={items.length}\n            Index={props.Index}\n            Records={getRecords}\n            SearchRecords={getSearchRecords}\n            Favorite={getFavorite}\n            Status={getStatus}\n            UpdateFavorite={updateFavorite}\n        />\n    );\n\n    let topHeight = 30;\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\" style={{ height: topHeight + \"px\", borderBottomStyle: \"solid\", borderWidth: \"1px\", backgroundColor: \"lightgray\" }}>\n                <center><b>{props.Index.File.name}</b> <small><Badge pill={true} bg=\"info\">Records: {props.Index.Records.length}</Badge></small></center>\n            </div>\n            <div className=\"row\">\n                <div className={\"col-\" + getColSize + \" scrollable\"} style={{ height: (window.innerHeight - topHeight) + \"px\", borderRightStyle: \"solid\", borderWidth: \"1px\" }}>\n                    {sideItems}\n                </div>\n                <div className={\"col-\" + (12 - getColSize)} style={{ height: (window.innerHeight - topHeight) }}>\n                    {items}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Viewer;\n","import React from 'react';\nimport LoadFile from './LoadFile.js';\nimport Viewer from './Viewer.js';\nimport './App.css';\n\nfunction App() {\n  const [getIndex, setIndex] = React.useState();\n  const [getIncludeLunr, setIncludeLunr] = React.useState(false);\n\n  const onUpdateIndex = (e) =>\n  {\n    setIndex(e);\n  }\n\n  var items = [];\n\n  if (getIndex)\n  {\n    items.push(\n      <Viewer key={items.length} Index={getIndex} getIncludeLunr={getIncludeLunr}/>\n    );\n  }\n  else\n  {\n    items.push(\n      <div key={items.length} className=\"container-fluid vcenter d-flex align-items-center justify-content-center\">\n        <LoadFile onUpdateIndex={onUpdateIndex} getIncludeLunr={getIncludeLunr} setIncludeLunr={setIncludeLunr}/>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {items}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}